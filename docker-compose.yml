version: '3.8'
services:

  # --------------------------
  # 1️⃣ Zookeeper (Kafka 필요)
  # --------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - msa-network

  # --------------------------
  # 2️⃣ Kafka (Zookeeper 모드)
  # --------------------------
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9094
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9094
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - msa-network
    depends_on:
      - zookeeper

  # --------------------------
  # 3️⃣ Zipkin
  # --------------------------
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - msa-network

  # --------------------------
  # 4️⃣ Config Server
  # --------------------------
  config-server:
    build:
      context: .
      dockerfile: config-server/Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - msa-network

  # --------------------------
  # 5️⃣ Discovery Server
  # --------------------------
  discovery-server:
    build:
      context: .
      dockerfile: discovery-server/Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    depends_on:
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - msa-network

  # --------------------------
  # 6️⃣ API Gateway
  # --------------------------
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8000:8000"
    depends_on:
      - discovery-server
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - msa-network

  # --------------------------
  # 7️⃣ User Service
  # --------------------------
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: user-service
    ports:
      - "8083:8083"
    depends_on:
      - discovery-server
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - msa-network

  # --------------------------
  # 8️⃣ Product Service
  # --------------------------
  product-service:
    build:
      context: .
      dockerfile: product-service/Dockerfile
    container_name: product-service
    ports:
      - "8081:8081"
    depends_on:
      - discovery-server
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - msa-network

  # --------------------------
  # 9️⃣ Order Service
  # --------------------------
  order-service:
    build:
      context: .
      dockerfile: order-service/Dockerfile
    container_name: order-service
    ports:
      - "8082:8082"
    depends_on:
      - discovery-server
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=default
    networks:
      - msa-network

# --------------------------
# 10️⃣ 네트워크 정의
# --------------------------
networks:
  msa-network:
    driver: bridge
